<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BitFaster.Caching" Version="1.0.3" />
    <PackageReference Include="Disqord.Bot" Version="1.0.0-176" />
    <PackageReference Include="dotenv.net" Version="3.0.0" />
    <PackageReference Include="ISO3166-Mobile" Version="2.1.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="6.0.0-preview.5.21301.5" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="5.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Pastel" Version="2.1.0" />
    <PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="5.0.3" />
    <PackageReference Include="prometheus-net.DotNetRuntime" Version="4.2.1" />
    <PackageReference Include="Qmmands" Version="5.0.1" />
    <PackageReference Include="Serilog" Version="2.10.0" />
    <PackageReference Include="Serilog.Enrichers.Thread" Version="3.1.0" />
    <PackageReference Include="Serilog.Exceptions" Version="7.0.0" />
    <PackageReference Include="Serilog.Expressions" Version="2.0.0" />
    <PackageReference Include="Serilog.Extensions.Hosting" Version="4.1.2" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Pepper.Commons.Osu\Pepper.Commons.Osu.csproj" />
    <ProjectReference Include="..\Pepper.FuzzySearch\Pepper.FuzzySearch.csproj" />
    <ProjectReference Include="..\Pepper.Logging.Serilog.Sinks.Discord\Pepper.Logging.Serilog.Sinks.Discord.csproj" />
  </ItemGroup>
  
  
  
  <Target Name="GetGitHashFromRepository" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">
    <PropertyGroup>
      <!-- temp file for the git version (lives in "obj" folder)-->
      <VerFile>$(IntermediateOutputPath)gitver</VerFile>
    </PropertyGroup>

    <!-- write the hash to the temp file.-->
    <Exec Command="git -C $(ProjectDir) describe --long --always --dirty &gt; $(VerFile)" ContinueOnError="true" />

    <!-- read the version into the GitVersion itemGroup-->
    <ReadLinesFromFile File="$(VerFile)" ContinueOnError="true">
      <Output TaskParameter="Lines" ItemName="GitVersion" />
    </ReadLinesFromFile>
    <!-- Set the BuildHash property to contain the GitVersion, if it wasn't already set.-->
    <PropertyGroup>
      <BuildHash>@(GitVersion)</BuildHash>
    </PropertyGroup>
  </Target>

  <Target Name="GetGitHashFromEnvironment" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">
    <!-- read the version into the GitVersion itemGroup-->
    <ReadLinesFromFile File="$(VerFile)" ContinueOnError="true">
      <Output TaskParameter="Lines" ItemName="GitVersion" />
    </ReadLinesFromFile>
    <!-- Set the BuildHash property to contain the GitVersion, if it wasn't already set.-->
    <PropertyGroup>
      <BuildHash>$(BUILD_HASH)</BuildHash>
    </PropertyGroup>
    <Message Text="Failed to detect git hash. Falling back to variable BUILD_HASH = $(BUILD_HASH)." Importance="high" />
  </Target>

  <Target Name="WriteGitHash" BeforeTargets="CoreCompile">
    <PropertyGroup>
      <CustomAssemblyInfoFile>$(IntermediateOutputPath)CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
    </PropertyGroup>
    <ItemGroup>
      <Compile Include="$(CustomAssemblyInfoFile)" />
    </ItemGroup>
    <ItemGroup>
      <AssemblyAttributes Include="AssemblyMetadata">
        <_Parameter1>GitHash</_Parameter1>
        <_Parameter2>$(BuildHash)</_Parameter2>
      </AssemblyAttributes>
    </ItemGroup>
    <WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)" />
  </Target>
</Project>
